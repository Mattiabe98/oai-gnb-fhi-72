apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    {{- include "oai-du.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "oai-du.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "oai-du.selectorLabels" . | nindent 8 }}
        app: oai-du
    {{- if .Values.multus.f1Interface.create }}
      annotations:
        cpu-quota.crio.io: "disable"
        k8s.v1.cni.cncf.io/networks: >-
          [{
                 "name": "{{ .Chart.Name }}-{{ .Values.multus.f1Interface.name }}",
                 "interface": "{{ .Values.multus.f1Interface.name }}"
                {{- if .Values.multus.defaultGateway }}
                 ,"default-route": ["{{ .Values.multus.defaultGateway }}"]
                {{- end }}
                {{- if .Values.multus.f1Interface.gateway }}
                ,"gateway": "{{ .Values.multus.f1Interface.gateway }}"
                {{- end }}
          }
          {{- if .Values.multus.ruInterface.create }}
          ,{
                 "name": "{{ .Chart.Name }}-{{ .Values.config.ruName }}-uplane",
                 "mac": "{{ .Values.multus.ruInterface.uPlaneMacAdd }}"
          }
          ,{
                 "name": "{{ .Chart.Name }}-{{ .Values.config.ruName }}-cplane",
                 "mac":  "{{ .Values.multus.ruInterface.cPlaneMacAdd }}"
          }
          {{- end }}
          ]
    {{- end }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{ toYaml .Values.imagePullSecrets | indent 8 }}
    {{- end }}
      initContainers:
        - name: init
          image: docker.io/oaisoftwarealliance/oai-tcpdump-init:alpine-3.20
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -c
            - until ncat -zv {{ .Values.config.cuHost }} 38472 --sctp ; do echo waiting for cu or cucp to start; sleep 1; done
          resources:
            requests:
              memory: 50Mi
              cpu: 1m
            limits:
              memory: 50Mi
              cpu: 1m
      containers:
      - name: gnbdu
        image: "{{ .Values.nfimage.repository }}:{{ .Values.nfimage.version }}"
        imagePullPolicy: {{ .Values.nfimage.pullPolicy }}
        volumeMounts:
#          - mountPath: /dev/hugepages
#            name: hugepage
          - mountPath: /opt/oai-gnb/etc
            name: configuration
            # subPath: gnb.conf
        {{- if .Values.resources.define}}
        resources:
          requests:
            {{ .Values.resources.requests.nf.sriovCplaneClaim.name }}: {{ .Values.resources.requests.nf.sriovCplaneClaim.quantity | quote  }}
            {{ .Values.resources.requests.nf.sriovUplaneClaim.name }}: {{ .Values.resources.requests.nf.sriovUplaneClaim.quantity | quote  }}
            hugepages-1Gi: "10Gi"
            memory: {{ .Values.resources.requests.nf.memory | quote }}
            cpu: {{ .Values.resources.requests.nf.cpu | quote }}
          limits:
            {{ .Values.resources.requests.nf.sriovCplaneClaim.name }}: {{ .Values.resources.requests.nf.sriovCplaneClaim.quantity | quote  }}
            {{ .Values.resources.requests.nf.sriovUplaneClaim.name }}: {{ .Values.resources.requests.nf.sriovUplaneClaim.quantity | quote  }}
            hugepages-1Gi: "10Gi"
            memory: {{ .Values.resources.limits.nf.memory | quote }}
            cpu: {{ .Values.resources.limits.nf.cpu | quote }}
        {{- end}}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        ports:
        - containerPort: 38472
          name: f1c
          protocol: SCTP
        - containerPort: {{ .Values.config.f1duPort}}
          name: f1u
          protocol: UDP
        {{- if .Values.start.gnbdu}}
        command: [ "/bin/bash", "-c" ]
        args:
         -  CONF='/opt/oai-gnb/etc/du.conf';
            CU_IP_ADDRESS=$(getent hosts $CU_HOST | awk '{print $1}');
            CU_IP_ADDRESS=$(if [[ $CU_IP_ADDRESS ]]; then echo $CU_IP_ADDRESS; else echo $CU_HOST;fi);
            F1_DU_IP_ADDRESS=$(ip -f inet addr show $F1_IF_NAME | grep -o "inet [0-9]*\.[0-9]*\.[0-9]*\.[0-9]*" | grep -o "[0-9]*\.[0-9]*\.[0-9]*\.[0-9]*");
            PCI_ADD_U=PCIDEVICE_OPENSHIFT_IO_${SRIOV_RESOURCE_NAME_UPLANE^^};
            PCI_ADD_C=PCIDEVICE_OPENSHIFT_IO_${SRIOV_RESOURCE_NAME_CPLANE^^};
            U_PLANE_PCI_ADD=$(echo ${!PCI_ADD_U});
            C_PLANE_PCI_ADD=$(echo ${!PCI_ADD_C});
            LIST=($(grep -oP '@[a-zA-Z0-9_]+@' $CONF | grep CORE | sed -e "s#@##g" ));
            CPUS=($(cat /sys/fs/cgroup/cpuset.cpus.effective | awk '/-/{for (i=$1; i<=$2; i++)printf "%s%s",i,ORS;next} 1' ORS=' ' RS=, FS=-));
            for i in ${!LIST[*]}; do eval "${LIST[$i]}=${CPUS[$i]}";done;
            VARS=$(grep -oP '@[a-zA-Z0-9_]+@' $CONF);
            for v in ${VARS};do N=`echo $v | sed -e "s#@##g"`; E="${E} -e s/${v}/${!N}/g";E="${E#' -e '}";done;
            sed -e ${E} $CONF | tee /tmp/du.conf;
            exec /opt/oai-gnb/bin/nr-softmodem -O /tmp/du.conf $USE_ADDITIONAL_OPTIONS;
        {{- else}}
        command:
          - /bin/sleep
          - infinity
        {{- end}}
        env:
          - name: TZ
            value: {{ .Values.config.timeZone }}
          - name: USE_ADDITIONAL_OPTIONS
            value: {{ .Values.config.useAdditionalOptions }}
          - name: SRIOV_RESOURCE_NAME_UPLANE
            value: {{ .Values.multus.ruInterface.sriovResourceNameUplane }}
          - name: SRIOV_RESOURCE_NAME_CPLANE
            value: {{ .Values.multus.ruInterface.sriovResourceNameCplane }}
          - name: CU_HOST
            value: {{ .Values.config.cuHost }}
          - name: F1_IF_NAME
            value: {{ .Values.config.f1IfName }}
      {{- if .Values.includeTcpDumpContainer }}
      - name: tcpdump
        image: "{{ .Values.tcpdumpimage.repository }}:{{ .Values.tcpdumpimage.version }}"
        imagePullPolicy: {{ .Values.tcpdumpimage.pullPolicy }}
        {{- if .Values.resources.define}}
        resources:
          requests:
            memory: {{ .Values.resources.requests.tcpdump.memory | quote }}
            cpu: {{ .Values.resources.requests.tcpdump.cpu | quote }}
          limits:
            memory: {{ .Values.resources.limits.tcpdump.memory | quote }}
            cpu: {{ .Values.resources.limits.tcpdump.cpu | quote }}
        {{- end}}
        securityContext:
           privileged: true
           capabilities:
              add:
               - NET_ADMIN
              drop:
               - ALL
        {{- if .Values.start.tcpdump}}
        command:
          - /bin/sh
          - -c
          - /usr/sbin/tcpdump -i any -w /tmp/pcap/{{ .Chart.Name }}_`date +%Y-%m-%d_%H_%M-%S-%Z`.pcap
        {{- else}}
        command:
          - /bin/sleep
          - infinity
        {{- end}}
      {{- end }}
      volumes:
      - configMap:
          name: {{ .Chart.Name }}-configmap
        name: configuration
#      - emptyDir:
#          medium: HugePages
#        name: hugepage
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccountName: {{ .Values.serviceAccount.name }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- if .Values.nodeSelector}}
      nodeSelector: 
         {{- toYaml .Values.nodeSelector | nindent 12 }}
      {{- end }}
      {{- if .Values.nodeName}}
      nodeName: {{ .Values.nodeName }}
      {{- end }}
